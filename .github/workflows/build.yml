name: Build Docker Image
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.EDSON_DOCKERHUB_ID }}
          password: ${{ secrets.EDSON_DOCKERHUB_TOKEN }}

#      - name: Configurar Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: 1.19

#      - name: Compilar proyecto
#        run: |
#          env GOOS=linux GOARCH=amd64 CGO_ENABLED=0
#          go build -a -installsuffix cgo -o build/ ./...

      - name: Configurar QEMU
        uses: docker/setup-qemu-action@v1

      - name: Configurar buildx
        uses: docker/setup-buildx-action@v1

      - name: Obtener servion del servicio
        uses: SebRollen/toml-action@v1.0.0
        id: pVersion
        with:
          file: 'goproject.toml'
          field: 'version'

      - name: Obtener nombre de la imagen de Docker
        uses: SebRollen/toml-action@v1.0.0
        id: pImageName
        with:
          file: 'goproject.toml'
          field: "imageName"

      - name: Construir imagen
        env:
          tag: ${{ steps.pVersion.outputs.value }}
          image_name: ${{ steps.pImageName.outputs.value }}
        run: |
          image="w3edd/$image_name"
          tag=$image:$tag
          docker buildx build \
          --push \
          --tag $tag \
          --platform linux/386,linux/amd64 .